server:
  port: 8080

spring:
  application:
    name: gateway
  cloud:
    gateway:
      default-filters:
        - RemoveRequestHeader=Cookie
      routes:
        - id: user-status-check
          uri: lb://user-service
          predicates:
            - Path=/user-service/users/status/check
            - Method=GET
            - Header=Authorization, Bearer (.*)
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service-signup
          uri: lb://user-service
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service-login
          uri: lb://user-service
          predicates:
            - Path=/user-service/users/login
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service-get-update-delete
          uri: lb://user-service
          predicates:
            - Path=/user-service/users/**
            - Method=GET,PUT,DELETE
            - Header=Authorization, Bearer (.*)
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service-actuator
          uri: lb://user-service
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
  #      discovery:
#        locator:
#          enabled: true
#          lower-case-service-id: true
  config:
    import: optional:configserver:${SPRING_CLOUD_CONFIG_URI:http://localhost:8888}
  sleuth:
    reactor:
      instrumentation-type: decorate_queues

management:
  endpoints:
    web:
      exposure:
        include: health